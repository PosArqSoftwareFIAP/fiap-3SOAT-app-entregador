
name: SonarQube Scan


      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd='curl -s http://localhost:9000/api/system/health | grep -o "GREEN"'
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; then
              echo "SonarQube is up and running"
              break
            fi
            echo "Waiting for SonarQube to be ready..."
            sleep 10
          done

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install sonar-scanner

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.properties') }}
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=seu_projeto_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}